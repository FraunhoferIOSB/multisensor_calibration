<library path="lib/libmultisensor_calibration_toolbox">
    <class name="multisensor_calibration/CameraDataProcessingNodelet"
            type="multisensor_calibration::CameraDataProcessingNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to run the processing of the camera data and, in turn, the detection of the
        calibration target within the camera data isolated from the rest.
        </description>
    </class>
    <class name="multisensor_calibration/LidarDataProcessingNodelet"
            type="multisensor_calibration::LidarDataProcessingNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to run the processing of the LiDAR data and, in turn, the detection of the
        calibration target within the LiDAR point clouds isolated from the rest.
        </description>
    </class>
    <class name="multisensor_calibration/ExtrinsicCameraLidarCalibrationNodelet"
            type="multisensor_calibration::ExtrinsicCameraLidarCalibrationNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to perform extrinsic camera-lidar calibration.
        </description>
    </class>
    <class name="multisensor_calibration/ExtrinsicCameraReferenceCalibrationNodelet"
            type="multisensor_calibration::ExtrinsicCameraReferenceCalibrationNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to perform extrinsic camera-reference calibration.
        </description>
    </class>
    <class name="multisensor_calibration/ExtrinsicLidarLidarCalibrationNodelet"
            type="multisensor_calibration::ExtrinsicLidarLidarCalibrationNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to perform extrinsic lidar-lidar calibration.
        </description>
    </class>
    <class name="multisensor_calibration/ExtrinsicLidarReferenceCalibrationNodelet"
            type="multisensor_calibration::ExtrinsicLidarReferenceCalibrationNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to perform extrinsic lidar-reference calibration.
        </description>
    </class>
    <class name="multisensor_calibration/ExtrinsicLidarVehicleCalibrationNodelet"
            type="multisensor_calibration::ExtrinsicLidarVehicleCalibrationNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to perform extrinsic lidar-vehicle calibration.
        </description>
    </class>
    <class name="multisensor_calibration/GuidedCameraLidarTargetPlacementNodelet"
            type="multisensor_calibration::GuidedCameraLidarTargetPlacementNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to guide the placement of the calibration target in the context of extrinsic 
        camera-lidar calibration.
        </description>
    </class>
    <class name="multisensor_calibration/GuidedLidarLidarTargetPlacementNodelet"
            type="multisensor_calibration::GuidedLidarLidarTargetPlacementNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to guide the placement of the calibration target in the context of extrinsic 
        lidar-lidar calibration.
        </description>
    </class>
    <class name="multisensor_calibration/PointCloud2ImageNodelet"
            type="multisensor_calibration::PointCloud2ImageNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to fuse a point cloud and a camera image by projecting the geometric 3D information
        from the point cloud into the camera image.
        </description>
    </class>
    <class name="multisensor_calibration/PointCloud2PointCloudDistanceNodelet"
            type="multisensor_calibration::PointCloud2PointCloudDistanceNodelet"
            base_class_type="nodelet::Nodelet">
        <description>
        Nodelet to calculate the n-to-n distance for a list of point clouds. For each point cloud 
        in the list, the smallest distance with respect to all other point clouds is found. The 
        calculated distance is normalized with respect to a given maximum distance and stored in the 
        intensity field of the source point cloud. This can then be used to colorize the distance in
        a point cloud viewer, such as rviz.
        </description>
    </class>
</library>
